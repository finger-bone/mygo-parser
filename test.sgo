func aaaa(a int) int {
    var b int;
    b = a * 2;
    return b;
}

decl fib int {}

func fib(n int, cache int) int {
    if(*(cache + (n * 4)) != 0) {
        return *(cache + (n * 4));
    };
    if(n < 2) {
        cache + (n * 4) <- n;
        return n;
    } else {
        result := fib(n - 1, cache) + fib(n - 2, cache);
        cache + (n * 4) <- result;
        return result;
    };
    unreachable;
}

func main() void {
    echo aaaa(2);
    a := 1;
    cache malloc 1024 * 64;
    while(a < 40) {
        echo a;
        echo fib(a, cache);
        a = a + 1;
    };
    free cache;
    return nil;
}